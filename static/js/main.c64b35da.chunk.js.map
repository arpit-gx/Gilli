{"version":3,"sources":["Image/GLXX.png","Image/VRS.jpg","Components/Navbar.js","Components/Card.js","api/API.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["module","exports","Navbar","AppBar","position","Toolbar","style","width","marginRight","padding","borderRadius","src","require","alt","Typography","variant","marginLeft","height","href","IconButton","Facebook","color","Twitter","LinkedIn","Cardx","match","useState","detail","setDetail","open","setopen","handleClick","id","url","fetch","then","response","json","catch","error","console","log","getMDetails","data","handleOpen","handleClose","Card","marginTop","CardContent","Grid","container","justify","alignItems","spacing","item","CardActions","marginBottom","Button","onClick","unique_id","Date","dateTimeGMT","toLocaleString","Dialog","onClose","DialogTitle","DialogContent","DialogContentText","fontWeight","stat","fontStyle","matchStarted","score","DialogActions","App","matches","setMatches","useEffect","className","fontFamily","sm","map","key","type","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.c64b35da.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/GLXX.61c2f99a.png\";","module.exports = __webpack_public_path__ + \"static/media/VRS.5ae71eed.jpg\";","\r\nimport { AppBar, Button, Dialog, DialogContent, DialogContentText, DialogTitle, Icon, IconButton, Menu, Toolbar, Typography } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport { AccessAlarm, Facebook, Home, LinkedIn, SettingsPowerRounded, ThreeDRotation, Twitter } from '@material-ui/icons';\r\nimport SearchBar from \"material-ui-search-bar\";\r\n\r\nconst Navbar = () =>{\r\n    return(\r\n       <AppBar position = \"sticky\">\r\n       <Toolbar>\r\n    \r\n           <img style={{width:40, marginRight:\"12px\", padding:\"12\", borderRadius:\"3px\" }} src={require(\"../Image/GLXX.png\") }alt=\"\"></img>\r\n\r\n    \r\n       <Typography variant=\"h5\">Gilli</Typography>\r\n       <SearchBar style={{marginLeft:\"800px\", height:\"40px\"}}/>\r\n      \r\n       <a  href=\"https://www.facebook.com/profile.php?id=100040402384254\">\r\n       <IconButton  style={{marginLeft:20}}>\r\n           <Facebook style={{color:\"white\"}}/>\r\n           </IconButton>\r\n           </a>\r\n          \r\n           <IconButton color=\"inherit\" style={{marginLeft:10}}> \r\n           <a href=\"https://twitter.com/ArpitSh20464600?s=09\">\r\n           <Twitter style={{color:\"white\"}} />\r\n           </a>\r\n           </IconButton>\r\n           <IconButton color=\"inherit\" style={{marginLeft:10}}>\r\n           <a href=\"https://www.linkedin.com/in/arpit-sharma-5264311a0\">\r\n           <LinkedIn style={{color:\"white\"}}/>\r\n           </a>\r\n           </IconButton>\r\n       \r\n       </Toolbar>\r\n    \r\n        \r\n       </AppBar> \r\n    )\r\n    \r\n};\r\nexport default Navbar;","import { Button, Card, CardActions, CardContent, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Grid, Typography } from '@material-ui/core';\r\nimport { Image } from '@material-ui/icons';\r\nimport React, { Fragment, useState } from 'react';\r\nimport { getMDetails } from '../api/API';\r\nconst Cardx = ({match}) =>{\r\n  const [detail, setDetail]= useState({});\r\n  const [open, setopen] = useState(false);\r\n  const handleClick=(id)=>{\r\n    getMDetails(id).then((data)=>{console.log(\"Match Data\",data); setDetail(data);handleOpen();}).catch((error)=>console.log(error))\r\n  };\r\n  const getCard =()=> {\r\n    return(\r\n        <Card  style={{marginTop:20 }}>\r\n         <CardContent>\r\n          <Grid container justify = \"center\" alignItems = \"center\" spacing={5}>\r\n           <Grid item>\r\n             <Typography variant=\"h5\">{match[\"team-1\"]}</Typography>\r\n           </Grid>\r\n           <Grid item>\r\n             <Typography>\r\n                <img style={{width:90}} src={require(\"../Image/VRS.jpg\")} alt=\"\"></img>\r\n             </Typography>\r\n           </Grid>\r\n           <Grid item>\r\n            <Typography variant=\"h5\">{match[\"team-2\"]}</Typography>\r\n           </Grid>\r\n           </Grid>\r\n\r\n         </CardContent>\r\n        <CardActions>\r\n         <Grid style={{marginBottom:2}} container justify=\"center\" spacing={4}>\r\n            <Button  onClick={()=>{\r\n              handleClick(match.unique_id);\r\n            }} variant=\"contained\" color=\"primary\" >\r\n               More\r\n            </Button>\r\n            <Button style={{marginLeft:20}}  variant=\"contained\" color=\"secondary\">\r\n                Begin at {new Date(match.dateTimeGMT).toLocaleString()} \r\n            </Button>\r\n            </Grid>\r\n        </CardActions>\r\n        </Card>\r\n    );};\r\n        const handleClose=()=>{\r\n          setopen(false);\r\n        };\r\n        const handleOpen=()=>{\r\n          setopen(true);\r\n        };\r\n    const getDialog = () => (\r\n      <Dialog open={open} onClose={handleClose} >\r\n      <DialogTitle id=\"alert-dialog-title\" >{\"Match Details\"}</DialogTitle>\r\n      <DialogContent>\r\n      <DialogContentText>\r\n      <Typography justify=\"center\"><span style={{fontWeight:\"bolder\", color:\"black\"}}>{detail.stat}</span></Typography>\r\n      <Typography style={{color:\"black\"}}>\r\n        Match : <span style={{fontStyle:\"italic\", fontWeight:\"bold\"}}>\r\n        {detail.matchStarted ? \"Started\" : \"Still not Started !\"}</span>\r\n      </Typography>\r\n      <Typography style={{color:\"black\"}}>\r\n        <span style={{fontStyle:\"italic\", fontWeight:\"bold\"}}>{detail.score}</span>\r\n      </Typography>\r\n      </DialogContentText>\r\n      </DialogContent>\r\n      <DialogActions>\r\n      <Button></Button>\r\n      </DialogActions>\r\n      </Dialog>\r\n    );\r\n    \r\n    return <Fragment>\r\n   { getCard() }\r\n   {getDialog()}\r\n    </Fragment>;\r\n};\r\nexport default Cardx;","//const API_KEY = \"\";\r\n\r\nexport const getMatches = () => {\r\n    const url= `https://cricapi.com/api/matches?apikey=JpOkehYBrFcbjfhcFLk4dGDCKar2`;\r\n\r\n    return fetch(url).then((response) => response.json()).catch((error)=>console.log(\"ERROR:\", error));\r\n}\r\n\r\nexport const getMDetails=(id)=>{\r\n    const url = `https://cricapi.com/api/cricketScore?apikey=JpOkehYBrFcbjfhcFLk4dGDCKar2&unique_id=${id}`\r\nreturn fetch(url).then((response) => response.json()).catch((error)=>console.log(error));\r\n}","import React, { Fragment, useEffect, useState } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { Button, Fab, Grid } from '@material-ui/core';\nimport Navbar from './Components/Navbar';\nimport { getMatches } from './api/API';\nimport Cardx from './Components/Card';\nimport { SportsMmaOutlined } from '@material-ui/icons';\n\nfunction App() {\n\n  const[matches, setMatches] = useState([]);\n  useEffect(() => {\n    getMatches()\n    .then((data) => {\n      setMatches(data.matches)\n      console.log(data.matches)\n    })\n    .catch();\n  }, []);\n  return (\n    <div className=\"App\">\n    <Navbar style={{height:\"20px\"}}/>\n    <h6 style={{ fontFamily:\"sans-serif\", alignItems:\"baseline\"}}> by Arpit Sharma</h6>\n    <h1 style={{fontFamily:\"sans-serif\"}}>Gilli, Welcomes you !</h1> \n     <Grid container>\n     <Grid sm=\"2\"></Grid>\n     <Grid sm=\"8\">\n       {matches.map((match)=>(\n         <Fragment key={match.unique_id}>\n         {match.type == \"Twenty20\" ? (\n         <Cardx key={match.unique_id} match={match} />):(\"\") }\n       </Fragment>\n       ))}\n       </Grid>\n     </Grid>\n     \n    \n       \n      \n\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}